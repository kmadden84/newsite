{"version":3,"sources":["actions/index.js","Components/header.js","Components/cv.js","Components/Cards.js","Components/Footer.js","Components/About.js","Components/Slider.js","Components/Skills.js","App.js","serviceWorker.js","reducers/herokuState.js","index.js"],"names":["heroku","e","dispatch","preventDefault","link","target","getAttribute","type","payload","corsLink","xhr","XMLHttpRequest","open","setRequestHeader","send","onprogress","event","console","log","onreadystatechange","status","readyState","reset","connect","state","loadStatus","loadFailed","newLink","show","modal","props","useState","setShow","handleClose","className","Navbar","bg","variant","expand","fixed","to","Toggle","aria-controls","Collapse","id","Nav","href","onClick","herokuClick","Modal","onHide","Header","closeButton","Title","Body","style","textAlign","Spinner","animation","Footer","Button","CV","pdfjs","GlobalWorkerOptions","workerSrc","version","showTreehouse","setShowTreehouse","loading","setLoading","handleCloseTreehouse","handleImageLoaded","Container","Row","Col","md","lg","Jumbotron","Accordion","defaultActiveKey","class","rel","fontWeight","Card","as","eventKey","ListGroup","Item","history","goBack","display","src","onLoad","file","pageNumber","wrap","axios","require","pageView","dataLayer","document","addEventListener","loadShow","setLoadShow","handleLoadClose","setState","handleChange","name","value","prev","resetForm","getElementById","cards","getElementsByClassName","arrayLength","length","heights","i","push","offsetHeight","tallest","Math","max","height","icon","faCoffee","Text","faList","faCode","faProjectDiagram","Form","onSubmit","method","headers","url","data","JSON","stringify","first_name","last_name","email","message","then","response","msg","catch","error","handleSubmit","Group","Label","Control","placeholder","onChange","controlId","rows","sending","success","yearVal","Date","getFullYear","color","About","index","setIndex","Carousel","activeIndex","onSelect","selectedIndex","alt","Caption","Skills","library","add","fab","App","location","contactform","window","hash","classList","scrollIntoView","this","path","render","TransitionGroup","CSSTransition","key","timeout","enter","exit","classNames","exact","Component","Boolean","hostname","match","initialState","herokuReducer","action","TagManager","initialize","gtmId","middleware","thunk","store","createStore","compose","applyMiddleware","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cb80a1be.chunk.js","sourcesContent":["import { useState} from 'react';\r\n\r\n\r\n\r\n\r\n\r\nexport const heroku = (e) => dispatch =>{\r\n  e.preventDefault();\r\n  let link = e.target.getAttribute('href');\r\n\r\n  dispatch({\r\n    type: 'newLink',\r\n    payload: link\r\n  })\r\n\r\n\r\n\r\n  const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n  const corsLink = proxyurl + link;\r\n //const corsLink = proxyurl + link;\r\n\r\n\r\n  let xhr = new XMLHttpRequest();\r\n  xhr.open('GET', corsLink);\r\n  xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n\r\n  xhr.send();\r\n\r\n  xhr.onprogress = function (event) {\r\n    console.log(event)\r\n  };\r\n    xhr.onreadystatechange = function () {\r\n      console.log(xhr.status)\r\n      console.log(xhr.readyState)\r\n      if (xhr.status === 200 && xhr.readyState === 4) {\r\n        dispatch({\r\n          type: 'loadStatus'        \r\n        })\r\n      }  else if (xhr.status !== 200) {\r\n        console.log(xhr.status, xhr.readyState)\r\n        dispatch({\r\n          type: 'loadFailed'\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  export const pageView = () => dispatch => {\r\n    dispatch({\r\n      type: 'pageView'\r\n    })\r\n}\r\n\r\n    export const reset = (e) => dispatch => {\r\n      dispatch({\r\n        type: 'reset',\r\n      })\r\n  }\r\n\r\n\r\n  export const dataLayerReset = (e) => dispatch => {\r\n    dispatch({\r\n      type: 'dataLayerReset',\r\n    })\r\n}\r\n\r\n\r\n","import React, { Component, useState } from 'react';\r\nimport { Navbar, Nav, Row, Col } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport {heroku, reset} from '../actions';\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types';\r\nimport { Modal, Spinner, Button } from 'react-bootstrap';\r\n\r\nconst Header = (props) => {\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n\r\n  const handleClose = () =>  {\r\n    setShow(false);\r\n    props.reset() //passing to actions \r\n  }\r\n\r\n  const herokuClick = (e, state) => {\r\n    props.heroku(e); //passing to actions\r\n\r\n    setShow(true)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <div className=\"header\">\r\n      <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" fixed=\"top\">\r\n        <Link to=\"/\" className=\"navbar-brand\">Kevin Madden</Link>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Link to=\"/about\" className=\"nav-link\">About Me</Link>\r\n            <Link to=\"/cv\" className=\"nav-link\">Curriculum Vitae</Link>\r\n            <Link to=\"/skills\" className=\"nav-link\">Code Stack</Link>\r\n            <a href=\"https://kevin-madden-portfolio.herokuapp.com/\" className=\"nav-link\" onClick={(e) => herokuClick(e)}>Portfolio</a>\r\n            <Link to=\"/#contact\" className=\"nav-link\">Contact</Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n    <Modal show={show} onHide={handleClose}>\r\n      \r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Loading Status</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n      {\r\n    \r\n        (() => {  \r\n\r\n          let link = props.newLink;\r\n          if (props.loadStatus !== \"loaded\" && props.loadFailed !== \"true\") {\r\n          return (\r\n            <div style={{textAlign:\"center\"}}><Spinner animation=\"border\" /><p>Initiating Heroku server... this can take up to 1 minute.  Link will load momentarily</p></div> \r\n          )\r\n          \r\n        } else if (props.loadStatus === \"loaded\" && props.loadFailed === \"false\") { \r\n            return (\r\n            <div style={{textAlign:\"center\"}}><p>App has loaded! Click link below</p><a target=\"_blank\" href={props.newLink} variant=\"primary\" className=\"btn btn-primary\" >Learn More</a></div>\r\n            )\r\n        }\r\n        else if (props.loadFailed === \"true\" && props.loadStatus !== \"loaded\") {\r\n          return(\r\n            <div style={{textAlign:\"center\"}}> <p>Heroko server load detection failed. Please click <a target=\"_blank\" href={props.newLink} variant=\"primary\" className=\"btn btn-primary\">here</a> to open site manually. If you could <Link to=\"/#contact\" className=\"nav-link\" onClick={handleClose}>contact</Link> me and let me know, it'd be much appreciated.</p></div>\r\n          )\r\n        }\r\n          \r\n      })() \r\n    } \r\n    \r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n    </div>\r\n    \r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loadStatus: state.loadStatus,\r\n    loadFailed: state.loadFailed,\r\n    newLink: state.newLink,\r\n    show: state.modal\r\n  }\r\n };\r\n \r\n\r\nHeader.propTypes = {\r\n  heroku: PropTypes.func.isRequired,\r\n  reset: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, {heroku, reset})(Header)\r\n\r\n\r\n","import { Accordion, Card, Button, Row, Col, Container, Jumbotron, ListGroup, Modal, Spinner } from 'react-bootstrap'\r\nimport React, { useState } from 'react';\r\nimport { Document, Page, pdfjs } from 'react-pdf';\r\n\r\nconst CV = (props) => {\r\n  pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\n  const [showTreehouse, setShowTreehouse] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleCloseTreehouse = () => setShowTreehouse(false);\r\n\r\n  const handleShowTreehouse = () => {\r\n    setShowTreehouse(true);\r\n    setLoading(true);\r\n  }\r\n  const handleShowCert = () => {\r\n    setShow(true);\r\n    setLoading(false);\r\n  }\r\n\r\n  const handleImageLoaded = () => {\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"cardList\">\r\n      <Container>\r\n        <Row>\r\n          <Col md={12} lg={12}>\r\n            <Jumbotron>\r\n              <Accordion defaultActiveKey=\"0\">\r\n                <h1>\r\n                  Curriculum Vitae\r\n                </h1>\r\n                <p><a href=\"/docs/Kevin-Madden-Resume.pdf\" class=\"resume-dl\" target=\"_blank\" rel=\"noopener noreferrer\" style={{ fontWeight: \"bold\" }}>Download</a> a current copy of my resume.</p>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                      <strong>GoodFood</strong> - Front End Developer (November 2021-Present)\r\n                    </Accordion.Toggle>\r\n                  </Card.Header>\r\n                  <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body>\r\n                      <ListGroup.Item>Setup Google Tag Manager for integration with Google Universal Analytics, Google Analytics 4, and other 3rd party Analytics applications (Emarsys).  This includes writing GTM-side scripts to extract information from the site that isn’t being pushed to the data layer.</ListGroup.Item>\r\n                      <ListGroup.Item>Updating a recent revision of their website built with (NextJS with Context) to push relevant information to the GTM Data Layer, so this data is available for analytics purposes.   This includes creating custom events, triggers and data in the front-end code.  I also need to ensure proper formatting of the data to ensure its acceptance in third party applications.</ListGroup.Item>\r\n                      <ListGroup.Item>Updating their app (React Native with Redux) building out components and functionality and bugfixing as needed. </ListGroup.Item>\r\n                      <ListGroup.Item>Updated Analytics documentation in Confluence.</ListGroup.Item>\r\n\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n\r\n                <Card>\r\n                  <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                      <strong>Bounteous</strong> - Front End Developer (January 2021-November 2021)\r\n                    </Accordion.Toggle>\r\n                  </Card.Header>\r\n                  <Accordion.Collapse eventKey=\"1\">\r\n                    <Card.Body>\r\n                      <ListGroup.Item>Create custom pages on Wawa.com for various campaigns, as well as general site layout updates and improvements.  Kentico based CMS, and updates were made using HTML, JavaScript, jQuery, and Sass/CSS.</ListGroup.Item>\r\n                      <ListGroup.Item>Used React with React-Tables to create an Allergens page for Wawa – users would select from a set of allergens, which would query an API and return a list of foods containing selected allergens.  Table contained filtering and dropdown capabilities (for nested product categories).</ListGroup.Item>\r\n                      <ListGroup.Item>Create responsive emails for various campaigns and tested them using Litmus.</ListGroup.Item>\r\n                      <ListGroup.Item>Carve assets out of .psd files for various updates to Wawa’s in-store ordering terminals</ListGroup.Item>\r\n\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\r\n                      <strong>Bell Media</strong> - Front End Developer / Site Production Specialist (November 2019- January 2021)\r\n                    </Accordion.Toggle>\r\n                  </Card.Header>\r\n                  <Accordion.Collapse eventKey=\"2\">\r\n                    <Card.Body>\r\n                      <ListGroup>\r\n                        <ListGroup.Item>Updating the Bell.ca website using HTML5, CSS3, JavasScript, and jQuery</ListGroup.Item>\r\n                        <ListGroup.Item>Working with clients and stakeholders to ensure accurate, timely delivery of website content</ListGroup.Item>\r\n                      </ListGroup>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"3\">\r\n                      <strong>Q4 Inc</strong> - Front End Developer / Web Support Analyst (June 2014 - February 2019)\r\n                    </Accordion.Toggle>\r\n                  </Card.Header>\r\n                  <Accordion.Collapse eventKey=\"3\">\r\n                    <Card.Body>\r\n                      <ListGroup>\r\n                        <ListGroup.Item>Primary role at Q4 was to maintain and update company Investor Relations websites and apps. Worked with companies including Best Buy, Wal-Mart, LinkedIn, Nike, Shopify, Apple and other large Fortune 500 IR teams</ListGroup.Item>\r\n                        <ListGroup.Item>Updated and built websites using HTML5, CSS3, jQuery, and JavaScript</ListGroup.Item>\r\n                        <ListGroup.Item>Built out custom functionality as required</ListGroup.Item>\r\n                        <ListGroup.Item>Built site pages from Photoshop mock-ups</ListGroup.Item>\r\n                        <ListGroup.Item>Drafted responsive emails in HTML/CSS and distribute to client email subscribers</ListGroup.Item>\r\n                        <ListGroup.Item>Optimized SEO using meta, alt, and title tags, site-speed optimization, as well as using sitemaps via Webmaster Tools, Google Analytics & Search Console, 301 redirects, and more</ListGroup.Item>\r\n                        <ListGroup.Item>Updated sites to ensure Accessibility/WCAG compliance (ARIA labels, title tags, alt tags, contrast toggles, etc…)</ListGroup.Item>\r\n                        <ListGroup.Item>Worked with clients and stakeholders to ensure accurate, timely delivery of website content</ListGroup.Item>\r\n                      </ListGroup>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"4\">\r\n                      <strong>SigmaXL Inc.</strong> - Webmaster / Office Manager / Software QA (November 2010 - March 2014)\r\n                    </Accordion.Toggle>\r\n                  </Card.Header>\r\n                  <Accordion.Collapse eventKey=\"4\">\r\n                    <Card.Body>\r\n                      <ListGroup>\r\n                        <ListGroup.Item>Updated the website using HTML, CSS and JavaScript</ListGroup.Item>\r\n                        <ListGroup.Item>Updated software help documentation</ListGroup.Item>\r\n                        <ListGroup.Item>Optimized the website's organic and paid SEO using Google AdWords, Bing Ads, Google Analytics and Webmaster Tools</ListGroup.Item>\r\n                        <ListGroup.Item>Managed Social Media presence (Twitter, Facebook, LinkedIn)</ListGroup.Item>\r\n                        <ListGroup.Item>Managed Invoicing, Sales Tracking and Processing</ListGroup.Item>\r\n                        <ListGroup.Item>Handled accounts payable and payroll</ListGroup.Item>\r\n                        <ListGroup.Item>Tested software to ensure compliance with workbook</ListGroup.Item>\r\n                        <ListGroup.Item>Created, narrated, edited, and compressed website help videos with Camtasia </ListGroup.Item>\r\n                        <ListGroup.Item>Provided technical support to clients over phone, email and live chat</ListGroup.Item>\r\n                        <ListGroup.Item>Working with clients and stakeholders to ensure accurate, timely delivery of website content</ListGroup.Item>\r\n                      </ListGroup>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"5\">\r\n                      <strong>Education</strong>\r\n                    </Accordion.Toggle>\r\n                  </Card.Header>\r\n                  <Accordion.Collapse eventKey=\"5\">\r\n                    <Card.Body>\r\n                      <ListGroup>\r\n                        <ListGroup.Item>Simon Fraser University: Bachelor of Arts, Major: Criminology. 2007.</ListGroup.Item>\r\n                        <ListGroup.Item>Team Treehouse: <a rel=\"noopener noreferrer\" href=\"https://join.teamtreehouse.com/full-stack-javascript-techdegree/?_ga=2.160914429.1792897713.1575135632-963753930.1575135632\" target=\"_blank\">FullStack JavaScript</a>. <a className=\"link\" onClick={handleShowTreehouse}>Certificate of Completion</a>. 2019.</ListGroup.Item>\r\n                        <ListGroup.Item>Google Tag Manager Fundamentals. <a className=\"link\" onClick={handleShowCert}>Certificate of Completion</a>. 2021.</ListGroup.Item>\r\n\r\n                      </ListGroup>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              </Accordion>\r\n            </Jumbotron>\r\n            <button onClick={() => props.history.goBack()} className=\"back-btn\">Go Back</button>\r\n          </Col>\r\n        </Row>\r\n        <Modal show={showTreehouse} onHide={handleCloseTreehouse}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Certificate of Completion</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div style={{ display: loading ? \"block\" : \"none\" }}>\r\n              <Spinner animation=\"border\" />\r\n            </div>\r\n            <img\r\n              src=\"https://api.accredible.com/v1/frontend/credential_website_embed_image/certificate/13234958\"\r\n              onLoad={() => handleImageLoaded()}\r\n            />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleCloseTreehouse}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Certificate of Completion</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div style={{ display: loading ? \"block\" : \"none\" }}>\r\n              <Spinner animation=\"border\" />\r\n            </div>\r\n            <Document\r\n              file=\"/docs/Course_Certificate.pdf\"\r\n              onLoad={() => handleImageLoaded()}\r\n            >\r\n              <Page pageNumber={1} wrap={false} />\r\n            </Document>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </Container>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default CV;","import React, { useState} from 'react';\r\nimport { Container, Button, Row, Col, Card, Accordion, Form, Modal, Spinner} from 'react-bootstrap';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCoffee, faCode, faProjectDiagram, faList } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { heroku, reset } from '../actions';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst axios = require('axios');\r\n\r\n\r\n\r\n\r\n\r\nconst Cards = (props) => {\r\n\r\n  document.addEventListener('load', function() {\r\n    props.pageView()\r\n  })\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [loadShow, setLoadShow] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  }\r\n\r\n  const handleLoadClose = () => {\r\n    setLoadShow(false);\r\n    props.reset() //passing to actions \r\n  }\r\n\r\n  const herokuClick = (e, state) => {\r\n    props.heroku(e); //passing to actions\r\n    setLoadShow(true)\r\n  }\r\n\r\n\r\n  const [state, setState] = useState({\r\n    \"first_name\": \"\",\r\n    \"last_name\": \"\",\r\n    \"email\": \"\",\r\n    \"message\": \"\",\r\n    \"id\": \"\",\r\n    \"sending\": \"false\",\r\n    \"success\": \"\"\r\n  })\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    setState(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }))\r\n  }\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n\r\n    setShow(true);\r\n    //setLoading(true);\r\n\r\n    e.preventDefault();\r\n    setState({\r\n      \"sending\": true\r\n    })\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      url: \"/send\",\r\n      data: JSON.stringify({\r\n        \"name\": state.first_name + \" \" + state.last_name,\r\n        \"email\": state.email,\r\n        \"id\": state.id,\r\n        \"message\": state.message\r\n      })\r\n    }).then((response) => {\r\n      if (response) {\r\n        setState({\r\n          \"sending\": false\r\n        })\r\n      }\r\n      if (response.data.msg === 'success') {\r\n        setState({\r\n          \"success\": true\r\n        })\r\n        resetForm();\r\n      } else if (response.data.msg === 'fail') {\r\n        //alert(\"Message failed to send.\")\r\n      }\r\n    }).catch(error => {\r\n      if (error) {\r\n        setState({\r\n          \"success\": false\r\n        })\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n\r\n  const resetForm = () => {\r\n    document.getElementById('contact-form').reset();\r\n  }\r\n\r\n  (function matchHeight() {\r\n    //Grab divs with the class name 'match-height'\r\n    const cards = document.getElementsByClassName('card-text')\r\n\r\n    //Find out how my divs there are with the class 'match-height' \r\n    var arrayLength = cards.length;\r\n    var heights = [];\r\n\r\n    //Create a loop that iterates through the cards variable and pushes the heights of the divs into an empty array\r\n    for (var i = 0; i < arrayLength; i++) {\r\n      heights.push(cards[i].offsetHeight);\r\n    }\r\n\r\n    //Find the largest of the divs\r\n    function getHighest() {\r\n      return Math.max(...heights);\r\n    }\r\n\r\n    //Set a variable equal to the tallest div\r\n    var tallest = getHighest();\r\n\r\n    //Iterate through cards and set all their height style equal to the tallest variable\r\n    for (var i = 0; i < cards.length; i++) {\r\n      cards[i].style.height = tallest + \"px\";\r\n    }\r\n  })();\r\n\r\n  return (\r\n\r\n    <div className=\"cardList\">\r\n      <Container>\r\n        <Row>\r\n          <Col lg={6}>\r\n            <Card>\r\n              <FontAwesomeIcon icon={faCoffee} />\r\n              <Card.Body>\r\n                <Card.Title>About Me</Card.Title>\r\n                <Card.Text>\r\n                  Learn a bit more about the one they call Kevin Madden\r\n                </Card.Text>\r\n                <Link to=\"/about\" variant=\"primary\" className=\"btn btn-primary\">Learn More</Link>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col lg={6}>\r\n            <Card>\r\n              <FontAwesomeIcon icon={faList} />\r\n              <Card.Body>\r\n                <Card.Title>Curriculum Vitae</Card.Title>\r\n                <Card.Text>\r\n                  Take a look at some of my past experience and education\r\n                </Card.Text>\r\n                <Link to=\"/cv\" variant=\"primary\" className=\"btn btn-primary\">Learn More</Link>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col lg={6}>\r\n            <Card>\r\n              <FontAwesomeIcon icon={faCode} />\r\n\r\n              <Card.Body>\r\n                <Card.Title>Skills/Code Stack</Card.Title>\r\n                <Card.Text>\r\n                  What does this guy know, anyway?\r\n                </Card.Text>\r\n                <Link to=\"/skills\" variant=\"primary\" className=\"btn btn-primary\">Learn More</Link>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col lg={6}>\r\n            <Card>\r\n              <FontAwesomeIcon icon={faProjectDiagram} />\r\n              <Card.Body>\r\n                <Card.Title>Projects</Card.Title>\r\n                <Card.Text>\r\n                  A portfolio of some of my past projects.  This is an external site, built with Node, Express and Pug.\r\n                </Card.Text>\r\n                <a href=\"https://kevin-madden-portfolio.herokuapp.com/\" variant=\"primary\" className=\"btn btn-primary\" target=\"_blank\" onClick={(e) => herokuClick(e)}>Learn More</a>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={12}>\r\n            <Accordion className=\"contact_accordion\">\r\n              <Card>\r\n                <Card.Header>\r\n                  <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                  <div class=\"card-title h5\">   Get In Touch!</div>\r\n                  </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"0\" id=\"contact_form\">\r\n                  <Card.Body>\r\n                    <p>I'm always open to hearing about new opportunities! If you think my skillset may be useful to your project or business, please reach out!</p>\r\n                    <Form onSubmit={(e) => handleSubmit(e)} method=\"POST\" id=\"contact-form\">\r\n                      <Row>\r\n                        <Col lg={6}>\r\n                          <Form.Group>\r\n                            <Form.Label>First Name</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"First Name\" name=\"first_name\" onChange={(e) => handleChange(e)} value={state.first_name} />\r\n                          </Form.Group>\r\n                        </Col>\r\n                        <Col lg={6}>\r\n                          <Form.Group>\r\n                            <Form.Label>Last Name</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Last Name\" name=\"last_name\" onChange={(e) => handleChange(e)} value={state.last_name} />\r\n                          </Form.Group>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col lg={6}>\r\n                          <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"Email\" name=\"email\" onChange={(e) => handleChange(e)} value={state.email} />\r\n                          </Form.Group>\r\n                        </Col>\r\n                        <Col lg={6}>\r\n                          <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                            <Form.Label>I Am A...</Form.Label>\r\n                            <Form.Control as=\"select\" name=\"id\" onChange={(e) => handleChange(e)} value={state.id}>\r\n                              <option>Agency Recruiter</option>\r\n                              <option>Workplace Recruiter</option>\r\n                              <option>Independent Recruiter</option>\r\n                              <option>Stalker</option>\r\n                              <option>Bot</option>\r\n                            </Form.Control>\r\n                          </Form.Group>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col lg={12}>\r\n                          <Form.Group controlId=\"exampleForm.ControlTextarea1\" >\r\n                            <Form.Label>Leave a message:</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows=\"3\" name=\"message\" onChange={(e) => handleChange(e)} value={state.message} />\r\n                          </Form.Group>\r\n                        </Col>\r\n                      </Row>\r\n                      <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            </Accordion>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Modal show={show} onHide={handleClose} className=\"email-confirmation\">\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Send Status...</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div style={{ display: state.sending ? \"block\" : \"none\" }}>\r\n              <Spinner animation=\"border\" /> Message sending...\r\n            </div>\r\n            <div style={{ display: state.sending ? \"none\" : \"block\" }}>\r\n              {(state.success) ? \"Message Received.  I'll be in touch with you soon!\" : <p>Message not delivered (I promise this form worked when I set it up!), please email <a href=\"mailto:kmadden84@gmail.com\">kmadden84@gmail.com</a></p>}\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n\r\n        <Modal show={loadShow} onHide={handleLoadClose}>\r\n\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Loading Status</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n\r\n            {\r\n\r\n              (() => {\r\n\r\n                if (props.loadStatus !== \"loaded\" && props.loadFailed !== \"true\") {\r\n\r\n                  return (\r\n                    <div style={{ textAlign: \"center\" }}><Spinner animation=\"border\" /><p>Initiating Heroku server... this can take up to 1 minute.  Link will load momentarily</p></div>\r\n                  )\r\n\r\n                } else if (props.loadStatus === \"loaded\" && props.loadFailed === \"false\") {\r\n\r\n                  return (\r\n                    <div style={{ textAlign: \"center\" }}><p>App has loaded! Click link below</p><a target=\"_blank\" href={props.newLink} variant=\"primary\" className=\"btn btn-primary\" >Learn More</a></div>\r\n                  )\r\n                }\r\n                else if (props.loadFailed === \"true\" && props.loadStatus !== \"loaded\") {\r\n\r\n                  return (\r\n                    <div style={{ textAlign: \"center\" }}> <p>Heroko server load detection failed. Please click <a target=\"_blank\" href={props.newLink} variant=\"primary\" className=\"btn btn-primary\">here</a> to open site manually. If you could <Link to=\"/#contact\" className=\"nav-link\" onClick={handleClose}>contact</Link> me and let me know, it'd be much appreciated.</p></div>\r\n                  )\r\n                }\r\n                console.log(props.loadStatus, props.loadFailed)\r\n\r\n              })()\r\n            }\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleLoadClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loadStatus: state.loadStatus,\r\n    loadFailed: state.loadFailed,\r\n    newLink: state.newLink,\r\n    show: state.modal,\r\n    pageView: state.dataLayer.pageView\r\n  }\r\n};\r\n\r\n\r\nCards.propTypes = {\r\n  heroku: PropTypes.func.isRequired,\r\n  reset: PropTypes.func.isRequired,\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, { heroku, reset })(Cards)\r\n\r\n","import React, { Component, useState } from 'react';\r\nimport { Navbar, Row, Col } from 'react-bootstrap';\r\nimport { faGithub } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nconst Footer = () => {\r\n  let yearVal = new Date().getFullYear();\r\n\r\n  return (\r\n    <div className=\"footer\">\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" fixed=\"bottom\">\r\n        <p style={{ color: \"white\" }}>© Kevin Madden {yearVal}</p>\r\n        <div className=\"footer--social\">\r\n          <a href=\"https://github.com/kmadden84\" target=\"_blank\"><FontAwesomeIcon icon={['fab', 'github']} style={{ color: \"#fff\" }} /></a>\r\n          <a href=\"https://www.linkedin.com/in/kevin-madden-12865035/\" target=\"_blank\"><FontAwesomeIcon icon={['fab', 'linkedin']} style={{ color: \"#fff\" }} /></a>\r\n        </div>\r\n      </Navbar>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Row, Col, Jumbotron, Container } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst About = (props) => {\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"cardList\">\r\n      <Container>\r\n        <Row>\r\n          <Col md={12} lg={12}>\r\n            <Jumbotron>\r\n              <h1>About Me</h1>\r\n              <p>\r\n                Hey there! I'm an experienced Toronto-based web developer and lifelong learner who loves keeping up to date with the latest updates in web development!  I've worked on many sites for many Fortune 500 companies, including FaceBook, Apple, LinkedIn, Shopify, Twitter, and others.  My code stack includes HTML5, CSS3, Vanilla JavaScript, jQuery, SQL, PHP, Node.js and React.js.\r\n                    The site you're currently on was built with React, Node, and Bootstrap. I'm always open to hearing about new opportunities!  If you'd like to get in touch, feel free to reach out to me via the contact form on the <Link to=\"/#contact\">Home</Link> page.\r\n              </p>\r\n            </Jumbotron>\r\n            <button onClick={() => props.history.goBack()} className=\"back-btn\">Go Back</button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default About;","import { Container, Carousel, Row, Col, Modal, Spinner, Button } from 'react-bootstrap';\r\nimport React, { useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport {heroku, reset} from '../actions';\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nconst Slider = (props, state) => {\r\n\r\n\r\n  \r\n\r\n  const [index, setIndex] = useState(0);\r\n  // const [direction, setDirection] = useState(null);\r\n\r\n  const handleSelect = (selectedIndex, e) => {\r\n    setIndex(selectedIndex);\r\n    // setDirection(e.direction);\r\n  };\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n\r\n  const handleClose = () =>  {\r\n    setShow(false);\r\n    props.reset() //passing to actions \r\n\r\n  }\r\n\r\n  const herokuClick = (e, state) => {\r\n    props.heroku(e); //passing to actions\r\n\r\n    setShow(true)\r\n  }\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Carousel activeIndex={index} onSelect={handleSelect}>\r\n\r\n          <Carousel.Item>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src=\"/img/bell-5g.png\"\r\n                alt=\"First slide\"\r\n              />\r\n              <Carousel.Caption>\r\n                <h3>Bell Canada's 5G page</h3>\r\n                <p>As a contractor with Bell, I built their 5G page.  The page is built using HTML5, CSS3, JavaScript, jQuery, Slick Slider, and PDF.js (for the zoomable maps section)</p>\r\n                <p><a href=\"https://www.bell.ca/business/mobility/our_network/5g\" rel=\"noopener noreferrer\" target=\"_blank\" className=\"bannerLink\">Live Site</a></p>\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n\r\n\r\n          <Carousel.Item>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src=\"/img/project-11-large-1.jpg\"\r\n                alt=\"First slide\"\r\n              />\r\n              <Carousel.Caption>\r\n                <h3>MERN Stack Book Depot App</h3>\r\n                <p>An app built with MongoDB, Express, React and Node allowing users to register and login to create a list of books with accompanying notes.</p>\r\n                <p><a href=\"https://mern-book-depot.herokuapp.com/\" rel=\"noopener noreferrer\" target=\"_blank\" className=\"bannerLink\" onClick={(e) => herokuClick(e)}>Live Demo</a></p>\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n\r\n\r\n\r\n            <Carousel.Item>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src=\"/img/project-12-large-2.jpg\"\r\n                alt=\"Second slide\"\r\n              />\r\n              <Carousel.Caption>\r\n                <h3>News Aggregator App</h3>\r\n                <p>An app built with React and a Node back-end allowing users to view news from pre-selected categories, or search based on keyword.  Data is pullsed from Newsapi.org</p>\r\n                <p><a href=\"https://news-aggregator-km.herokuapp.com/\" rel=\"noopener noreferrer\" target=\"_blank\" className=\"bannerLink\" onClick={(e) => herokuClick(e)}>Live Demo</a></p>\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n\r\n\r\n\r\n\r\n            <Carousel.Item>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src=\"/img/project-5-large-1.jpg\"\r\n                alt=\"Third slide\"\r\n              />\r\n              <Carousel.Caption>\r\n                <h3>Fetching / Parsing / Styling JSON Data</h3>\r\n                <p>A app which fetches student information, then parses and styles the data.  Clicking a student box opens more info in a modal, and you can toggle between student cards via the modal.</p>\r\n                <p><a href=\"http://www.kevin-madden-portfolio.club/projects/json_data/index.html\" rel=\"noopener noreferrer\" target=\"_blank\" className=\"bannerLink\">Live Demo</a></p>\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n\r\n\r\n\r\n            <Carousel.Item>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src=\"/img/project-8-large-1.jpg\"\r\n                alt=\"Fourth slide\"\r\n              />\r\n              <Carousel.Caption>\r\n                <h3>Full Stack React.js + Express app.</h3>\r\n                <p>This is a course depository app, where you can create an account and add courses and descriptions to a depository.  You may only edit and/or delte your own courses.  The React client fetches data from a REST API created with Node, Express, SQLite, and Sequelize.</p>\r\n                <p><a href=\"https://course-depot.herokuapp.com/\" rel=\"noopener noreferrer\" target=\"_blank\" className=\"bannerLink\" onClick={(e) => herokuClick(e)}>Live Demo</a></p>\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n\r\n\r\n\r\n\r\n\r\n            <Carousel.Item>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src=\"/img/project-10-large-1.jpg\"\r\n                alt=\"Fifth slide\"\r\n              />\r\n              <Carousel.Caption>\r\n                <h3>Full Stack Dating Site</h3>\r\n                <p>\r\n                  A dating site, where you can create a profile, and see your matches based on your profile information.  Profile info is fetched/stored in a database created with Node, Express, Sequelize, and SQLite.  Authentication with basic-auth.\r\n                </p>\r\n                <p><a href=\"https://km-dating-app.herokuapp.com/\" rel=\"noopener noreferrer\" target=\"_blank\" className=\"bannerLink\" onClick={(e) => herokuClick(e)}>Live Demo</a></p>\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n            <Carousel.Item>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src=\"/img/project-9-large-1.jpg\"\r\n                alt=\"Sixth slide\"\r\n              />\r\n              <Carousel.Caption>\r\n                <h3>Open Tabel Restaurant search</h3>\r\n                <p>\r\n                  Search Open Table restaurants by city.  Results are paginated.\r\n                </p>\r\n                <p><a href=\"https://bmoapptest.herokuapp.com/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"bannerLink\" onClick={(e) => herokuClick(e)}>Live Demo</a></p>\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n            <Carousel.Item>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src=\"/img/project-4-large-1.jpg\"\r\n                alt=\"Seventh slide\"\r\n              />\r\n              <Carousel.Caption>\r\n                <h3>Game Show App</h3>\r\n                <p>\r\n                  A word guessing game, similar to Wheel of Fortune. Each incorrectly guessed letter removes 1 of your 5 lives\r\n                </p>\r\n                <p><a href=\"http://www.kevin-madden-portfolio.club/projects/game_show/index.html\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"bannerLink\" >Live Demo</a></p>\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n          </Carousel>\r\n        </Col>\r\n      </Row>\r\n      <Modal show={show} onHide={handleClose}>\r\n      \r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Loading Status</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n      \r\n        {\r\n      \r\n          (() => {  \r\n\r\n            {/* let link = props.newLink; */}\r\n            if (props.loadStatus !== \"loaded\" && props.loadFailed !== \"true\") {\r\n            return (\r\n              <div style={{textAlign:\"center\"}}><Spinner animation=\"border\" /><p>Initiating Heroku server... this can take up to 1 minute.  Link will load momentarily</p></div> \r\n            )\r\n            \r\n          } else if (props.loadStatus === \"loaded\" && props.loadFailed === \"false\") { \r\n              return (\r\n              <div style={{textAlign:\"center\"}}><p>App has loaded! Click link below</p><a target=\"_blank\" href={props.newLink} variant=\"primary\" className=\"btn btn-primary\" >Learn More</a></div>\r\n              )\r\n          }\r\n          else if (props.loadFailed === \"true\" && props.loadStatus !== \"loaded\") {\r\n            return(\r\n              <div style={{textAlign:\"center\"}}> <p>Error Loading App. If you could <Link to=\"/#contact\" className=\"nav-link\" onClick={handleClose}>contact</Link> me and let me know, it'd be much appreciated.</p></div>\r\n            )\r\n          }\r\n            \r\n        })() \r\n      } \r\n      \r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n\r\n    </Container>\r\n\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loadStatus: state.loadStatus,\r\n    loadFailed: state.loadFailed,\r\n    newLink: state.newLink,\r\n    show: state.modal\r\n  }\r\n };\r\n \r\n\r\nSlider.propTypes = {\r\n  heroku: PropTypes.func.isRequired,\r\n  reset: PropTypes.func.isRequired,\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, {heroku, reset})(Slider)\r\n\r\n","import React from 'react';\r\nimport { Row, Col, Jumbotron, Container } from 'react-bootstrap';\r\n\r\nconst Skills = (props) => {\r\n    let yearVal = new Date().getFullYear();\r\n    console.log(yearVal)\r\n\r\n    return (\r\n\r\n        <div className=\"cardList\">\r\n        <Container>\r\n            <Row>\r\n                <Col md={12} lg={12}>\r\n                    <Jumbotron>\r\n                        <h1>Skills</h1>\r\n                        <p>I'm a web developer with many years' front-end experience working on production level sites.  My code stack includes:</p>\r\n                     <ul>\r\n                     <li>HTML5</li>\r\n                     <li>CSS3 / Bootstrap</li>\r\n                     <li>JavaScript</li>\r\n                     <li>jQuery</li>\r\n                     <li>React.js / Redux / Hooks</li>\r\n                     <li>Node.js / Express</li>\r\n                     <li>SQL</li>\r\n                     </ul>\r\n\r\n                     <p>My \"To Learn\" list includes: Python, PHP, and Angular</p>\r\n\r\n                    </Jumbotron>\r\n                    <button onClick={()=> props.history.goBack()} className=\"back-btn\">Go Back</button>\r\n\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            </Container>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Skills;","import React, { Component } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport Header from './Components/header';\nimport CV from './Components/cv';\nimport Cards from './Components/Cards';\nimport Footer from './Components/Footer';\nimport About from './Components/About';\nimport Slider from './Components/Slider';\nimport Skills from './Components/Skills';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { library } from '@fortawesome/fontawesome-svg-core'\n\n\n\nlibrary.add(fab)\nlet dataLayer = [];\n\nclass App extends Component {\n\n\n\n  constructor(props, { location }) {\n    super(props);\n    this.state = {\n    };\n  }\n  componentDidUpdate() {\n    const contactform = document.getElementById('contact_form');\n\n    if (contactform !== \"undefined\" && window.location.hash === \"#contact\") {\n      contactform.classList.add('show');\n      contactform.scrollIntoView();\n    }\n  }\n\n  render(props) {\n    const { location } = this.props;\n\n\n    return (\n      <div>\n        <Route path=\"*\" render={(props) => <Header />} />\n   \n          <Route path=\"*\" render={(props) => <Slider />} />\n          <TransitionGroup>\n            <CSSTransition\n              key={location.key}\n              timeout={{ enter: 300, exit: 30 }}\n              classNames={'fade'}\n            >\n              <Switch location={location}>\n                <Route path=\"/\" exact={true} render={(props) => <Cards {...props} />} />\n                <Route exact path=\"/cv\" exact={true} render={(props) => <CV {...props} />} />\n                <Route exact path=\"/about\" exact={true} render={(props) => <About {...props} />} />\n                <Route exact path=\"/skills\" exact={true} render={(props) => <Skills {...props} />} />\n              </Switch>\n            </CSSTransition>\n          </TransitionGroup>\n\n        <Route path=\"*\" render={(props) => <Footer />} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nlet initialState = {\r\n  loadStatus: \"\",\r\n  loadFailed: \"false\",\r\n  newLink: \"\",\r\n  modal: false,\r\n  dataLayer: []\r\n}\r\n\r\nconst herokuReducer = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case 'loadStatus':\r\n      return {\r\n        ...state,\r\n        loadStatus: \"loaded\"\r\n      }\r\n    case 'loadFailed':\r\n        return {\r\n          ...state,\r\n          loadFailed: \"true\"\r\n     }\r\n     case 'newLink':\r\n        var link = action.payload;\r\n        return {\r\n          ...state,\r\n          newLink: link\r\n     }\r\n     case 'pageView':\r\n      return {\r\n        ...state,\r\n        dataLayer: [{\r\n          pageView: window.location.href\r\n        }]\r\n   }\r\n\r\n     case 'dataLayerReset':\r\n      return {\r\n        dataLayer: []\r\n   }\r\n     case 'reset':\r\n     return { \r\n       ...initialState\r\n       };\r\n      default:\r\n        return state\r\n  }\r\n}\r\n\r\nexport default herokuReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {\n    BrowserRouter,\n    Route,\n  } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport herokuReducer from './reducers/herokuState';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\n// import ReactGA from 'react-ga';\nimport TagManager from 'react-gtm-module'\n\n// const TRACKING_ID = \"G-JXTHMBYZ8E\"; // YOUR_OWN_TRACKING_ID\n\nconst tagManagerArgs = {\n    gtmId: 'GTM-TLCMWB8'\n  }\n\n// ReactGA.initialize(TRACKING_ID);\nTagManager.initialize(tagManagerArgs)\n\n\nconst middleware = [thunk];\n\nlet initialState = {\n  loadStatus: \"\",\n  loadFailed: \"false\",\n  newLink: \"\",\n  setShow: false,\n  dataLayer: []\n}\n\nconst store = createStore(\n  herokuReducer,\n  initialState,\n  compose(\n  applyMiddleware(...middleware)\n  )\n);\n\n\nReactDOM.render(<BrowserRouter><Provider store={store}><Route path=\"/\" render={(props) => <App {...props} />}  /></Provider></BrowserRouter>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}